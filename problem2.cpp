/*
PROBLEM:
Each new term in the Fibonacci sequence is generated by adding the previous
two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.
*/

#include <iostream>
#include <cstdio>
using namespace std;

int MAXVALUE = 4000000; //max value permitted

int evenSumFib(int n = MAXVALUE){
  //init the Fibonacci sequence
  int prev = 1;
  int curr = 2;
  int sum = 0;
  int temp; //used in incrementation of Fibonacci seq.

  while (curr <= MAXVALUE){
    if (curr % 2 == 0){ //only update sum if number is even.
      sum = sum + curr;
    }
    //always update Fib sequence.
    temp = curr; //store curr value
    curr = curr + prev; //increase curr
    prev = temp; //update prev
  }
  return sum;
}

int main(){
  printf("Let us calculate the sum of all even terms in the Fibonacci sequence "
    "that are less than %d .\n", MAXVALUE);
  cout << "Sum = " << evenSumFib() << "\n";
  return 0;
}
